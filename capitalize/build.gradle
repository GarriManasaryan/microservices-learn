plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
	jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
	jvmArgs += "--enable-preview"
}

repositories {
	mavenCentral()
}

task copyAppJar(type:Copy){
	dependsOn bootJar
	from bootJar.archiveFile.get().asFile
	rename {String filename -> return "capitalize.jar"}
	into "${rootProject.buildDir}/output-docker"
}

dependencies {
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.jetbrains:annotations:23.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.flywaydb:flyway-core'
	implementation 'org.postgresql:postgresql'
//	implementation 'org.springframework.kafka:spring-kafka'

}

tasks.named('test') {
	useJUnitPlatform()
}
